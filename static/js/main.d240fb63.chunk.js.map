{"version":3,"sources":["components/iframe.js","App.js","serviceWorker.js","index.js"],"names":["Iframe","className","src","width","height","title","frameBorder","allowTransparency","allow","App","style","paddingTop","paddingRight","textAlign","fontSize","textDecoration","paddingLeft","marginBottom","margin","href","target","rel","position","bottom","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oOAiBeA,G,MAfO,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC9C,OACE,4BACEH,UAAYA,EACZI,MAAM,iBACNH,IAAMA,EACNC,MAAQA,EACRC,OAASA,EACTE,YAAY,IACZC,kBAAkB,OAClBC,MAAM,sBC8FGC,E,uKAnGX,OACE,yBAAKR,UAAU,OACb,yBAAKA,UAAU,WACb,yBAAKS,MAAO,CAAEC,WAAY,OAAQC,aAAc,OAAQC,UAAW,UACjE,yBAAKZ,UAAU,qBACf,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,qBAEjB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,qCACb,uBAAGA,UAAU,mBAAb,aAGA,uBAAGA,UAAU,mBAAb,aAKJ,yBACEA,UAAU,mDADZ,yBAMF,yBAAKA,UAAU,WACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,uBAAuBS,MAAO,CAAEG,UAAW,QAASF,WAAY,SAA7E,gCACA,yBAAKV,UAAU,aACb,uBAAGS,MAAO,CAAEI,SAAU,SAAtB,mEACkE,6BAChE,6BAFF,qCAGoC,6BAHpC,qDAIoD,6BAJpD,gDAK+C,6BAL/C,qBAMoB,6BAClB,6BAPF,iDAQgD,6BARhD,2DAS0D,6BAT1D,wBAUuB,6BACrB,6BAXF,iDAYgD,6BAC9C,6BAbF,iFAcgF,6BAdhF,0DAeyD,6BAfzD,qCAgBoC,6BAClC,6BAjBF,gDAkB+C,0BAAMJ,MAAO,CAAEK,eAAgB,cAA/B,gBAlB/C,MAqBF,6BACE,0BAAMd,UAAU,iCAItB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACb,uBAAGA,UAAU,6BAA6BS,MAAO,CAAEG,UAAW,QAASD,aAAc,SAArF,WACA,uBAAGX,UAAU,6BAA6BS,MAAO,CAAEG,UAAW,OAAQG,YAAa,OAAQC,aAAc,SAAzG,WACA,kBAAC,EAAD,CACEhB,UAAU,cACVC,IAAI,iEACJC,MAAM,MACNC,OAAO,QAET,uBAAGH,UAAU,6BAA6BS,MAAO,CAAEG,UAAW,OAAQG,YAAa,SAAnF,aACA,uBAAGf,UAAU,6BAA6BS,MAAO,CAAEG,UAAW,QAASD,aAAc,SAArF,aAGJ,yBAAKX,UAAU,WACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,SACf,yBAAKA,UAAU,eACb,uBAAGS,MAAO,CAAEQ,OAAQ,MAApB,uBACA,uBAAGR,MAAO,CAAEQ,OAAQ,MAApB,uCACA,uBAAGR,MAAO,CAAEQ,OAAQ,MAApB,wCACA,qDACA,uBACEC,KAAK,4DACLC,OAAO,SACPC,IAAI,uBAHN,SAOA,iDAGJ,yBAAKX,MAAO,CAAEY,SAAU,WAAYC,OAAQ,OAAQP,YAAa,OAAQH,UAAW,SAClF,yBAAKZ,UAAU,qBACf,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,2B,GA7FTuB,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.d240fb63.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Iframe = ({ className, src, width, height }) => {\n  return (\n    <iframe\n      className={ className }\n      title=\"spotify-iframe\"\n      src={ src }\n      width={ width }\n      height={ height }\n      frameBorder=\"0\"\n      allowTransparency=\"true\"\n      allow=\"encrypted-media\"\n    />\n  );\n};\n\nexport default Iframe;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Iframe from './components/iframe';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"section\">\n          <div style={{ paddingTop: '10px', paddingRight: '20px', textAlign: 'right' }}>\n            <div className=\"dots aaaa-yellow\"/>\n            <div className=\"dots aaaa-red\"/>\n            <div className=\"dots aaaa-blue\"/>\n            <div className=\"dots aaaa-black\"/>\n          </div>\n          <div className=\"welcome\">\n            <div className=\"animated fadeInDown slow delay-2s\">\n              <p className=\"header-playfair\">\n                Hi there,\n              </p>\n              <p className=\"header-playfair\">\n                Yennhi.\n              </p>\n            </div>\n          </div>\n          <div\n            className=\"happy-moments animated fadeInDown slow delay-4s\"\n          >\n            Happy moments below.\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"box-champagne\">\n            <p className=\"mini-header-playfair\" style={{ textAlign: 'right', paddingTop: '50px' }}>I WISH SPRING WOULD END SOON</p>\n            <div className=\"story-box\">\n              <p style={{ fontSize: '14px' }}>\n                Never in my wildest dream that this would came out from my mind.<br />\n                <br />\n                The moment when the flowers bloom,<br />\n                The moment when puffy jackets are finally shelved,<br />\n                The moment when the urge of cleaning emerges,<br />\n                The moment when...<br />\n                <br />\n                Ah whatever, i'm not trying to be poetic here.<br />\n                It's just - it's when all the good things come to place!<br />\n                It's a joyful season!<br />\n                <br />\n                But - we know we are not getting it this year.<br />\n                <br />\n                I do have to admit that i had something planned for you, since like - forever.<br />\n                But of course the inevitable did not allow me to do so.<br />\n                So i have something else in mind. <br />\n                <br />\n                Why don't you scroll down, and have a look - <span style={{ textDecoration: 'underline' }}>line by line</span>?\n              </p>\n            </div>\n            <div>\n              <span className=\"chevron bottom flicker-5s\"/>\n            </div>\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"playlist\">\n            <p className=\"header-playfair flicker-8s\" style={{ textAlign: 'right', paddingRight: '10px' }}>MOMENTS</p>\n            <p className=\"header-playfair flicker-5s\" style={{ textAlign: 'left', paddingLeft: '10px', marginBottom: '10px' }}>LASTING</p>\n            <Iframe\n              className=\"border-gold\"\n              src=\"https://open.spotify.com/embed/playlist/5NEtTRvgiNXXTmvriVy66F\"\n              width=\"300\"\n              height=\"380\"\n            />\n            <p className=\"header-playfair flicker-8s\" style={{ textAlign: 'left', paddingLeft: '10px' }}>HAPPINESS</p>\n            <p className=\"header-playfair flicker-5s\" style={{ textAlign: 'right', paddingRight: '10px' }}>ETERNAL</p>\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"invite-circle\">\n            <div className=\"wave\" />\n            <div className=\"circle-text\">\n              <p style={{ margin: '0' }}>When the time comes</p>\n              <p style={{ margin: '0' }}>When we have reflected on ourselves</p>\n              <p style={{ margin: '0' }}>When we get to meet the ones we love</p>\n              <span>I want to take you </span>\n              <a\n                href=\"https://www.concertgebouw.nl/nl/page/43079/van=2020-06-03\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                here.\n              </a>\n              <p>Will you let me?</p>\n            </div>\n          </div>\n          <div style={{ position: 'absolute', bottom: '10px', paddingLeft: '20px', textAlign: 'left' }}>\n            <div className=\"dots aaaa-yellow\"/>\n            <div className=\"dots aaaa-red\"/>\n            <div className=\"dots aaaa-blue\"/>\n            <div className=\"dots aaaa-black\"/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}